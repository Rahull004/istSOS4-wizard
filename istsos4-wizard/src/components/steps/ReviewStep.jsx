import React from 'react'
import { useWizard } from '../../hooks/useWizard';
import { Download } from 'lucide-react';





function ReviewStep() {
  const { state } = useWizard();
  const { configuration } = state;

  const generateEnvFile = () => {
    const env = `# istSOS4 Configuration File
# Generated by istSOS4 Setup Wizard

# Basic Server Configuration
HOSTNAME=${configuration.hostname}
SUBPATH=${configuration.subpath}
VERSION=${configuration.version}
DEBUG=${configuration.debug}

# Database Configuration
POSTGRES_DB=${configuration.postgresDb}
POSTGRES_USER=${configuration.postgresUser}
POSTGRES_PASSWORD=${configuration.postgresPassword}
PG_MAX_OVERFLOW=${configuration.pgMaxOverflow}
PG_POOL_SIZE=${configuration.pgPoolSize}
PG_POOL_TIMEOUT=${configuration.pgPoolTimeout}

# Data Management
DUMMY_DATA=${configuration.dummyData}
CLEAR_DATA=${configuration.clearData}
VERSIONING=${configuration.versioning.toString()}
DUPLICATES=${configuration.duplicates.toString()}

# Sample Data Configuration
N_THINGS=${configuration.nThings}
N_OBSERVED_PROPERTIES=${configuration.nObservedProperties}
INTERVAL=${configuration.interval}
FREQUENCY=${configuration.frequency}
START_DATETIME=${configuration.startDatetime}

# Performance Settings
COUNT_MODE=${configuration.countMode}
COUNT_ESTIMATE_THRESHOLD=${configuration.countEstimateThreshold}
TOP_VALUE=${configuration.topValue}
PARTITION_CHUNK=${configuration.partitionChunk}
CHUNK_INTERVAL=${configuration.chunkInterval}

# Additional Services
REDIS=${configuration.redis}
EPSG=${configuration.epsg}`;

    return env;
  };

  const downloadEnvFile = () => {
    const envContent = generateEnvFile();
    const blob = new Blob([envContent], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = '.env';
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
  };

  const copyToClipboard = () => {
    navigator.clipboard.writeText(generateEnvFile());
  };

  return (
    <div className="space-y-6">
      <h2 className="text-2xl font-bold text-gray-900">Configuration Review</h2>
      
      <div className="bg-gray-50 p-4 rounded-lg">
        <h3 className="font-semibold text-gray-900 mb-4">Generated .env File Preview</h3>
        <pre className="bg-white p-4 rounded border text-sm overflow-x-auto max-h-96">
          {generateEnvFile()}
        </pre>
      </div>

      <div className="flex space-x-4">
        <button
          onClick={downloadEnvFile}
          className="flex items-center px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors"
        >
          <Download className="w-4 h-4 mr-2" />
          Download .env File
        </button>
        
        <button
          onClick={copyToClipboard}
          className="flex items-center px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700 transition-colors"
        >
          Copy to Clipboard
        </button>
      </div>

      <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
        <h3 className="font-semibold text-blue-900 mb-2">Next Steps:</h3>
        <ol className="text-sm text-blue-800 space-y-1 list-decimal list-inside">
          <li>Download the .env file</li>
          <li>Place it in your istSOS4 project directory</li>
          <li>Run <code className="bg-blue-100 px-1 rounded">docker-compose up -d</code></li>
          <li>Access istSOS4 at {configuration.hostname}</li>
        </ol>
      </div>
    </div>
  );
}
export default ReviewStep;